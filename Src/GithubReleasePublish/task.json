{
  "id": "0E54B1DE-2C34-4ACD-B93D-0FA1B9730BBE",
  "name": "GitHubReleasePublish",
  "friendlyName": "Create or Modify GitHub Release",
  "instanceNameFormat": "Create or Modify GitHub Release",
  "description":
    "Create or modify GitHub Release, allowing to upload assets, check manifest content and more.",
  "author": "Marcelo Forment√£o",
  "helpMarkDown":
    "[More Information](https://github.com/marceloavf/github-tools-vsts) (Version #{Version}#).",
  "category": "Utility",
  "version": {
    "Major": 1,
    "Minor": 0,
    "Patch": 0
  },
  "demands": ["npm"],
  "groups": [
    {
        "name": "advanced",
        "displayName": "Advanced",
        "isExpanded": false
    }
  ],
  "inputs": [
    {
      "name": "githubEndpoint",
      "type": "connectedService:github",
      "label": "GitHub Connection",
      "defaultValue": "",
      "required": true,
      "helpMarkDown":
        "Select the service endpoint for your GitHub connection. <br>To create one, click the Manage link and create a new service endpoint."
    },
    {
      "name": "manuallySetRepository",
      "type": "boolean",
      "label": "Manually Set Repository",
      "defaultValue": "false",
      "required": true,
      "helpMarkDown": "Manually set Owner and Repository name instead of using the pick list bellow."
    },
    {
      "name": "githubRepository",
      "type": "pickList",
      "label": "Repository",
      "defaultValue": "",
      "visibleRule": "manuallySetRepository = false",
      "helpMarkDown":
        "Name of the GitHub repository. <br>If empty, it will be extracted from <strong>package.json</strong> (the repository.url field).",
      "properties": {
        "DisableManageLink": "True"
      }
    },
    {
      "name": "githubOwner",
      "type": "string",
      "label": "Owner",
      "defaultValue": "",
      "required": true,
      "visibleRule": "manuallySetRepository = true",
      "helpMarkDown":
        "Owner name of the repository. <br>If empty, the owner will be extracted from <strong>package.json</strong>."
    },
    {
      "name": "githubRepositoryName",
      "type": "string",
      "label": "Repository",
      "defaultValue": "",
      "required": true,
      "visibleRule": "manuallySetRepository = true",
      "helpMarkDown":
        "Name of the repository. <br>If empty, the repository name will be extracted from <strong>package.json</strong>."
    },
    {
      "name": "githubTag",
      "type": "string",
      "label": "Tag",
      "defaultValue": "v$(Build.BuildNumber)",
      "helpMarkDown":
        "Tag to release, value should be <strong>v$(Build.BuildNumber)</strong> for release current build, for example: v1.0.0. <br>If empty, the version will be extracted from <strong>package.json</strong> and prepended by a 'v'."
    },
    {
      "name": "githubReleaseTitle",
      "type": "string",
      "label": "Release Title",
      "defaultValue": "v$(Build.BuildNumber)",
      "helpMarkDown":
        "Release title. <br>If empty, it will be the same as the tag."
    },
    {
      "name": "githubReleaseNotes",
      "type": "multiLine",
      "label": "Release Notes",
      "defaultValue": "",
      "helpMarkDown":
        "Release notes. <br>If missing it will be left undefined.",
      "properties": {
        "resizable": "true",
        "rows": "2"
      }
    },
    {
      "name": "githubReleaseDraft",
      "type": "boolean",
      "label": "Draft",
      "defaultValue": "true",
      "required": true,
      "helpMarkDown": "Release tagged as Draft. Uncheck this and pre-release to have a release tag."
    },
    {
      "name": "githubReleasePrerelease",
      "type": "boolean",
      "label": "Pre Release",
      "defaultValue": "false",
      "required": true,
      "helpMarkDown": "Release tagged as Pre-release. Uncheck this and draft to have a release tag."
    },
    {
      "name": "githubIgnoreAssets",
      "type": "boolean",
      "label": "Ignore Assets",
      "defaultValue": "false",
      "required": true,
      "helpMarkDown": "Skip uploading assets to this release."
    },
    {
      "name": "githubReleaseAsset",
      "type": "multiLine",
      "label": "Files to Upload as Assets",
      "required": true,
      "visibleRule": "githubIgnoreAssets = false",
      "helpMarkDown": "The files to upload as artifacts to the release. Multiple minimatch patterns are supported. [More information](https://aka.ms/minimatchexamples)"
    },
    {
      "name": "manifestJson",
      "type": "filePath",
      "label": "Manifest JSON",
      "defaultValue": "",
      "helpMarkDown":
        "File from which default values will be extracted if options are missing."
    },
    {
      "groupName": "advanced",
      "name": "githubReuseRelease",
      "type": "boolean",
      "label": "Reuse Release",
      "defaultValue": "true",
      "required": true,
      "helpMarkDown": "Allow to reuse a release with the same tag."
    },
    {
      "groupName": "advanced",
      "name": "githubReuseDraftOnly",
      "type": "boolean",
      "label": "Reuse only Draft Release",
      "defaultValue": "true",
      "required": true,
      "helpMarkDown":
        "Allow to only reuse a release if it's draft. Prevents you from editing already published releases."
    },
    {
      "groupName": "advanced",
      "name": "githubSkipDuplicatedAssets",
      "type": "boolean",
      "label": "Skip Duplicated Assets",
      "defaultValue": "false",
      "required": true,
      "helpMarkDown":
        "Prevents the plugin to replace assets with the same name."
    },
    {
      "groupName": "advanced",
      "name": "githubEditRelease",
      "type": "boolean",
      "label": "Edit Release",
      "defaultValue": "false",
      "required": true,
      "helpMarkDown":
        "Allow to edit release name, notes, type (`draft, prerelease, release`) and target commitsh. [More Info](https://github.com/marceloavf/github-tools-vsts#edit-release)."
    },
    {
      "groupName": "advanced",
      "name": "githubDeleteEmptyTag",
      "type": "boolean",
      "label": "Delete Empty Tag",
      "defaultValue": "false",
      "required": true,
      "helpMarkDown":
        "Delete tag if it's editing release type from `prerelease` or `release` to `draft`."
    },
    {
      "groupName": "advanced",
      "name": "githubTargetCommitsh",
      "type": "string",
      "label": "Target Commitsh",
      "defaultValue": "",
      "helpMarkDown":
        "Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. <br> Defaults to the default branch of the repository."
    },
    {
      "groupName": "advanced",
      "name": "githubApiUrl",
      "type": "string",
      "label": "API URL",
      "defaultValue": "",
      "helpMarkDown":
        "You can use a custom API URL to connect to GitHub Enterprise instead of github.com. <br>Defaults to 'https://api.github.com'."
    }
  ],
  "sourceDefinitions": [
    {
      "target": "githubRepository",
      "endpoint":
        "/$(system.teamProject)/_apis/sourceProviders/GitHub/repositories?serviceEndpointId=$(githubEndpoint)",
      "selector": "jsonpath:$.repositories[*].id",
      "keySelector": "jsonpath:$.repositories[*].id",
      "authKey": "tfs:teamfoundation"
    }
  ],
  "execution": {
    "Node": {
      "target": "githubReleasePublish.js",
      "argumentFormat": ""
    }
  }
}
